@model TP_Final_BD_MVC_Session5.Models.CompositionsEquipes

@{
    ViewBag.Title = "UpdateESport";
}

<h2>UpdateESport</h2>


@using (Html.BeginForm("UpdateCompositionsEquipes", "CompositionsEquipes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ESportViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => Model.IdTeam);


            <div class="col-md-10">

                <select name="IdTeam">

                    @{
    TP_Final_BD_MVC_Session5.Models.Teams allTeams = new TP_Final_BD_MVC_Session5.Models.Teams();

    if (allTeams.SelectAll())
    {
        do
        {
            <option value="@allTeams.Id" @(allTeams.Id == Model.IdTeam ? "selected" : "")>@allTeams.Id : @allTeams.NomEquipe</option>
        } while (allTeams.Next());
    }

}

                </select>

                @Html.ValidationMessageFor(model => Model.IdTeam)
                <br />

                @Html.LabelFor(model => Model.IdJoueur);

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.IdJoueur);



            <div class="col-md-10">


                <select name="IdJoueur">

                    @{
    TP_Final_BD_MVC_Session5.Models.Joueurs allPlayers = new TP_Final_BD_MVC_Session5.Models.Joueurs();

    if (allPlayers.SelectAll())
    {
        do
        {
            <option value="@allPlayers.Id" @(allPlayers.Id == Model.IdJoueur ? "selected" : "")>@allPlayers.Id : @allPlayers.NomComplet</option>
        } while (allPlayers.Next());
    }

}

                </select>

                @Html.ValidationMessageFor(model => Model.IdJoueur)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Score, new { type = "number" })
                @Html.ValidationMessageFor(model => model.Score)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
